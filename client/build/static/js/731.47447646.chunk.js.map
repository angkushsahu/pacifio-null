{"version":3,"file":"static/js/731.47447646.chunk.js","mappings":"wMACA,EAA0B,wBAA1B,EAA2E,uC,wFC4K3E,EAnKoB,WAChB,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACAE,GAASC,EAAAA,EAAAA,IAAmB,CAAEH,GAAIA,IAAlCE,KACFE,GAAWC,EAAAA,EAAAA,MACjB,GAAsDC,EAAAA,EAAAA,MAA0B,eAAzEC,EAAa,KAAeC,EAAa,KAAxBC,UACxB,GAAqDC,EAAAA,EAAAA,MAAuB,eAArEC,EAAU,KAAeC,EAAe,KAA1BH,UACrB,GAAwBI,EAAAA,EAAAA,MAAjBC,GAA2C,YAA9B,GAEpB,GAA0CC,EAAAA,EAAAA,UAAmB,CACzDC,YAAa,EACbC,SAAU,GACVC,KAAM,GACNC,QAAS,EACTC,MAAO,GACPC,QAAS,KACX,eAPKC,EAAa,KAAEC,EAAgB,MAStCC,EAAAA,EAAAA,YAAU,WACE,OAAJtB,QAAI,IAAJA,GAAAA,EAAMuB,SACNF,EAAiB,CACbP,YAAad,EAAKwB,QAAQV,YAC1BC,SAAUf,EAAKwB,QAAQT,SACvBC,KAAMhB,EAAKwB,QAAQR,KACnBC,QAASjB,EAAKwB,QAAQP,QACtBC,MAAOlB,EAAKwB,QAAQN,MACpBC,QAASnB,EAAKwB,QAAQL,SAGlC,GAAG,CAACnB,IAEJ,IAAMyB,EAAmB,yCAAG,WAAOC,GAAY,0FAEiB,GAD5DA,EAAEC,iBACMb,EAAyDM,EAAzDN,YAAaC,EAA4CK,EAA5CL,SAAUC,EAAkCI,EAAlCJ,KAAMC,EAA4BG,EAA5BH,QAASC,EAAmBE,EAAnBF,MAAOC,EAAYC,EAAZD,QAChDL,GAAgBC,GAAaC,GAASC,GAAYC,GAAUC,EAAO,gBACvB,OAA7CS,EAAAA,GAAAA,KAAW,kCAAkC,sCAKrC,OAAJ5B,QAAI,IAAJA,IAAAA,EAAMuB,QAAO,iCACUlB,GAAc,kBAAKe,GAAa,IAAEtB,GAAIA,KAAO+B,SAAS,KAAD,GAAtEC,EAAQ,QACDP,SACTK,EAAAA,GAAAA,QAAcE,EAASC,SACvB7B,EAAS8B,EAAAA,EAAAA,WAETJ,EAAAA,GAAAA,MAAYE,EAASC,SACxB,yCAEsBtB,GAAW,UAAKW,IAAiBS,SAAS,KAAD,IAA1DC,EAAQ,QACDP,SACTK,EAAAA,GAAAA,QAAcE,EAASC,SACvB7B,EAAS8B,EAAAA,EAAAA,WAETJ,EAAAA,GAAAA,MAAYE,EAASC,SACxB,0DAGLH,EAAAA,GAAAA,MAAY,KAAI5B,KAAK+B,SAAW,yBAAyB,0DAEhE,gBA7BwB,sCA+BnBE,EAAiB,yCAAG,kHAEKrB,EAAc,CAAEd,GAAIA,IAAO+B,SAAS,KAAD,GAApDC,EAAQ,QACDP,QACTK,EAAAA,GAAAA,QAAcE,EAASC,SAEvBH,EAAAA,GAAAA,MAAYE,EAASC,SACxB,gDAEDH,EAAAA,GAAAA,MAAY,KAAI5B,KAAK+B,SAAW,4BAA4B,yDAEnE,kBAXsB,mCAajBG,EAAgB,SAACR,GACnB,MAAwBA,EAAES,OAAlBC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACdhB,GAAiB,kBAAKD,GAAa,cAAGgB,EAAOC,IACjD,EAEA,OAAI3B,GAAmBJ,GACZ,SAAC,IAAW,KAGf,iBAAMgC,UAAS,yBAAoBC,GAAkBC,MAAO,CAAEC,QAAS,QAAS,UAC5E,kBAAMC,SAAUjB,EAAoB,WAChC,eAAIa,UAAU,cAAa,SAAExC,EAAK,iBAAmB,iBACrD,iBAAKwC,UAAU,kBAAiB,WAC5B,kBAAOK,QAAQ,cAAa,SAAC,6BAC7B,kBACIC,KAAK,SACLR,KAAK,cACLtC,GAAG,cACH+C,YAAY,uBACZR,MAAOjB,EAAcN,YAAcM,EAAcN,YAAc,GAC/DgC,SAAUZ,QAGlB,iBAAKI,UAAU,kBAAiB,WAC5B,kBAAOK,QAAQ,WAAU,SAAC,yBAC1B,kBACIC,KAAK,OACLR,KAAK,WACLtC,GAAG,WACH+C,YAAY,6CACZR,MAAOjB,EAAcL,SACrB+B,SAAUZ,QAGlB,iBAAKI,UAAU,kBAAiB,WAC5B,kBAAOK,QAAQ,UAAS,SAAC,wBACzB,oBAAQP,KAAK,UAAUtC,GAAG,UAAUuC,MAAOjB,EAAcD,QAAS2B,SAAUZ,EAAc,WACtF,mBAAQG,MAAM,GAAGU,UAAU,EAAK,SAAC,iBAGhCC,EAAAA,EAAAA,kBAA0BC,KAAI,SAACC,GAAS,OACrC,mBAA2Bb,MAAOa,EAAKC,QAAQ,SAC1CD,EAAKd,MADGc,EAAKC,QAET,WAIrB,iBAAKb,UAAU,kBAAiB,WAC5B,kBAAOK,QAAQ,QAAO,SAAC,sBACvB,oBAAQP,KAAK,QAAQtC,GAAG,QAAQuC,MAAOjB,EAAcF,MAAO4B,SAAUZ,EAAc,WAChF,mBAAQG,MAAM,GAAGU,UAAU,EAAK,SAAC,iBAGhCK,EAAAA,GAAAA,mBAAyBhC,EAAcD,SAAS8B,KAAI,SAACC,GAAS,OAC3D,mBAA2Bb,MAAOa,EAAKC,QAAQ,SAC1CD,EAAKd,MADGc,EAAKC,QAET,WAIrB,iBAAKb,UAAU,kBAAiB,WAC5B,kBAAOK,QAAQ,OAAM,SAAC,qBACtB,kBAAOC,KAAK,OAAOR,KAAK,OAAOtC,GAAG,OAAO+C,YAAY,cAAcR,MAAOjB,EAAcJ,KAAM8B,SAAUZ,QAE5G,iBAAKI,UAAU,kBAAiB,WAC5B,kBAAOK,QAAQ,UAAS,SAAC,wBACzB,kBACIC,KAAK,SACLR,KAAK,UACLtC,GAAG,UACH+C,YAAY,cACZR,MAAOjB,EAAcH,QAAUG,EAAcH,QAAU,GACvD6B,SAAUZ,QAGlB,mBAAQU,KAAK,SAASG,UA9ItB,EA8IyCM,MAAM,cAAa,SAAC,gBAG5DvD,GACG,mBAAQ8C,KAAK,SAASN,UAAWC,EAA+Bc,MAAM,sBAAsBC,QAASrB,EAAkB,SAAC,wBAGxH,SAKxB,C","sources":["webpack://client/./src/components/features/order/address/styles.module.scss?1e3e","components/features/order/address/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"address\":\"styles_address__sdaX3\",\"delete_address__button\":\"styles_delete_address__button__iQkZu\"};","import styles from \"./styles.module.scss\";\r\nimport LoadingPage from \"components/common/loading\";\r\nimport { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Country, State } from \"country-state-city\";\r\nimport { toast } from \"react-toastify\";\r\nimport { IAddress } from \"types\";\r\nimport { useAddAddressMutation, useDeleteAddressMutation, useGetAddressQuery, useUpdateAddressMutation } from \"store/queries\";\r\nimport routes from \"components/app/routes\";\r\n\r\nconst AddressForm = () => {\r\n    const { id } = useParams();\r\n    const { data } = useGetAddressQuery({ id: id! });\r\n    const navigate = useNavigate();\r\n    const [updateAddress, { isLoading: updateLoading }] = useUpdateAddressMutation();\r\n    const [addAddress, { isLoading: additionLoading }] = useAddAddressMutation();\r\n    const [deleteAddress] = useDeleteAddressMutation();\r\n    const loading = false;\r\n    const [addressValues, setAddressValues] = useState<IAddress>({\r\n        phoneNumber: 0,\r\n        location: \"\",\r\n        city: \"\",\r\n        pincode: 0,\r\n        state: \"\",\r\n        country: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (data?.success) {\r\n            setAddressValues({\r\n                phoneNumber: data.address.phoneNumber,\r\n                location: data.address.location,\r\n                city: data.address.city,\r\n                pincode: data.address.pincode,\r\n                state: data.address.state,\r\n                country: data.address.country,\r\n            });\r\n        }\r\n    }, [data]);\r\n\r\n    const onAddressSubmission = async (e: FormEvent) => {\r\n        e.preventDefault();\r\n        const { phoneNumber, location, city, pincode, state, country } = addressValues;\r\n        if (!phoneNumber || !location || !city || !pincode || !state || !country) {\r\n            toast.warn(\"Please validate all the fields\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            if (data?.success) {\r\n                const response = await updateAddress({ ...addressValues, id: id! }).unwrap();\r\n                if (response.success) {\r\n                    toast.success(response.message);\r\n                    navigate(routes.shipping);\r\n                } else {\r\n                    toast.error(response.message);\r\n                }\r\n            } else {\r\n                const response = await addAddress({ ...addressValues }).unwrap();\r\n                if (response.success) {\r\n                    toast.success(response.message);\r\n                    navigate(routes.shipping);\r\n                } else {\r\n                    toast.error(response.message);\r\n                }\r\n            }\r\n        } catch (err: any) {\r\n            toast.error(err.data.message || \"Unable to set address\");\r\n        }\r\n    };\r\n\r\n    const onAddressDeletion = async () => {\r\n        try {\r\n            const response = await deleteAddress({ id: id! }).unwrap();\r\n            if (response.success) {\r\n                toast.success(response.message);\r\n            } else {\r\n                toast.error(response.message);\r\n            }\r\n        } catch (err: any) {\r\n            toast.error(err.data.message || \"Unable to delete address\");\r\n        }\r\n    };\r\n\r\n    const validateInput = (e: ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n        const { name, value } = e.target;\r\n        setAddressValues({ ...addressValues, [name]: value });\r\n    };\r\n\r\n    if (additionLoading || updateLoading) {\r\n        return <LoadingPage />;\r\n    } else {\r\n        return (\r\n            <main className={`form-container ${styles.address}`} style={{ padding: \"2rem\" }}>\r\n                <form onSubmit={onAddressSubmission}>\r\n                    <h2 className=\"text-center\">{id ? \"Update Address\" : \"Add Address\"}</h2>\r\n                    <div className=\"input-container\">\r\n                        <label htmlFor=\"phoneNumber\">Enter your phone number</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"phoneNumber\"\r\n                            id=\"phoneNumber\"\r\n                            placeholder=\"e.g. +91 99887 76655\"\r\n                            value={addressValues.phoneNumber ? addressValues.phoneNumber : \"\"}\r\n                            onChange={validateInput}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-container\">\r\n                        <label htmlFor=\"location\">Enter your location</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"location\"\r\n                            id=\"location\"\r\n                            placeholder=\"e.g. In front of xyz bank, Gar-ali, Jorhat\"\r\n                            value={addressValues.location}\r\n                            onChange={validateInput}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-container\">\r\n                        <label htmlFor=\"country\">Enter your country</label>\r\n                        <select name=\"country\" id=\"country\" value={addressValues.country} onChange={validateInput}>\r\n                            <option value=\"\" disabled={true}>\r\n                                -- Select --\r\n                            </option>\r\n                            {Country.getAllCountries().map((item: any) => (\r\n                                <option key={item.isoCode} value={item.isoCode}>\r\n                                    {item.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"input-container\">\r\n                        <label htmlFor=\"state\">Enter your state</label>\r\n                        <select name=\"state\" id=\"state\" value={addressValues.state} onChange={validateInput}>\r\n                            <option value=\"\" disabled={true}>\r\n                                -- Select --\r\n                            </option>\r\n                            {State.getStatesOfCountry(addressValues.country).map((item: any) => (\r\n                                <option key={item.isoCode} value={item.isoCode}>\r\n                                    {item.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"input-container\">\r\n                        <label htmlFor=\"city\">Enter your city</label>\r\n                        <input type=\"text\" name=\"city\" id=\"city\" placeholder=\"e.g. Jorhat\" value={addressValues.city} onChange={validateInput} />\r\n                    </div>\r\n                    <div className=\"input-container\">\r\n                        <label htmlFor=\"pincode\">Enter your pincode</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"pincode\"\r\n                            id=\"pincode\"\r\n                            placeholder=\"e.g. 123456\"\r\n                            value={addressValues.pincode ? addressValues.pincode : \"\"}\r\n                            onChange={validateInput}\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" disabled={loading} title=\"Set Address\">\r\n                        Set Address\r\n                    </button>\r\n                    {id ? (\r\n                        <button type=\"button\" className={styles.delete_address__button} title=\"Delete this address\" onClick={onAddressDeletion}>\r\n                            Delete this address\r\n                        </button>\r\n                    ) : null}\r\n                </form>\r\n            </main>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AddressForm;\r\n"],"names":["id","useParams","data","useGetAddressQuery","navigate","useNavigate","useUpdateAddressMutation","updateAddress","updateLoading","isLoading","useAddAddressMutation","addAddress","additionLoading","useDeleteAddressMutation","deleteAddress","useState","phoneNumber","location","city","pincode","state","country","addressValues","setAddressValues","useEffect","success","address","onAddressSubmission","e","preventDefault","toast","unwrap","response","message","routes","onAddressDeletion","validateInput","target","name","value","className","styles","style","padding","onSubmit","htmlFor","type","placeholder","onChange","disabled","Country","map","item","isoCode","State","title","onClick"],"sourceRoot":""}