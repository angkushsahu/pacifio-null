{"version":3,"file":"static/js/355.3630c969.chunk.js","mappings":"iNAsEA,UA/DuB,WACnB,OAA0BA,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KACtB,GAAwDC,EAAAA,EAAAA,MAA2B,eAA5EC,EAAc,YAAIC,EAAS,EAATA,UAAWC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAEvCC,EAAgB,yCAAG,WAAOC,GAAY,4EACrB,GAAnBA,EAAEC,iBACGT,EAAM,CAAD,eACiC,OAAvCU,EAAAA,GAAAA,KAAW,4BAA4B,8BAGtCC,EAAAA,EAAAA,GAAcX,GAAO,CAAD,eACsB,OAA3CU,EAAAA,GAAAA,KAAW,gCAAgC,oDAKtBP,EAAe,CAAEH,MAAAA,IAASY,SAAS,KAAD,IAAjDC,EAAM,QACDC,SACPJ,EAAAA,GAAAA,QAAcG,EAAOE,SACxB,kDAEDL,EAAAA,GAAAA,MAAY,KAAIM,KAAKD,SAAW,+BAA+B,0DAEtE,gBAnBqB,sCA2BtB,OANAE,EAAAA,EAAAA,YAAU,WACFZ,GACAK,EAAAA,GAAAA,MAAaJ,EAAcU,KAAKD,QAExC,GAAG,CAACV,EAASC,KAGT,8BACKF,GACG,SAAC,IAAW,KAEZ,kBAAMc,UAAU,iBAAgB,WAC5B,gBAAKA,UAAU,kBAAiB,UAC5B,gBAAKC,IAAKC,EAAAA,EAAiBC,IAAI,aAAaC,QAAQ,YAExD,kBAAMC,SAAUhB,EAAiB,WAC7B,wBAAI,qBACJ,iBAAKW,UAAU,kBAAiB,WAC5B,kBAAOM,QAAQ,QAAO,SAAC,uBACvB,kBACIC,KAAK,QACLC,KAAK,QACLC,GAAG,QACHC,YAAY,yBACZC,MAAO7B,EACP8B,SAAU,SAACtB,GAAC,OAAKP,EAASO,EAAEuB,OAAOF,MAAM,QAGjD,mBAAQJ,KAAK,SAASO,SAAU5B,EAAU,SAAC,sBAQnE,C,qBC9DA,IANsB,SAACJ,GACnB,OAAOA,EAAMiC,MACT,wJAER,C","sources":["components/features/auth/forgotPassword/index.tsx","utils/validateEmail.ts"],"sourcesContent":["import { FormEvent, useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { validateEmail } from \"utils\";\r\nimport backgroundImage from \"assets/formBackground.svg\";\r\nimport LoadingPage from \"components/common/loading\";\r\nimport { useForgotPasswordMutation } from \"store/queries\";\r\n\r\nconst ForgotPassword = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [forgotPassword, { isLoading, isError, error }] = useForgotPasswordMutation();\r\n\r\n    const onForgotPassword = async (e: FormEvent) => {\r\n        e.preventDefault();\r\n        if (!email) {\r\n            toast.warn(\"Please enter your e-mail\");\r\n            return;\r\n        }\r\n        if (!validateEmail(email)) {\r\n            toast.warn(\"E-mail format is not correct\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const result = await forgotPassword({ email }).unwrap();\r\n            if (result.success) {\r\n                toast.success(result.message);\r\n            }\r\n        } catch (err: any) {\r\n            toast.error(err.data.message || \"Unable to find your account\");\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isError) {\r\n            toast.error((error as any).data.message);\r\n        }\r\n    }, [isError, error]);\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <LoadingPage />\r\n            ) : (\r\n                <main className=\"form-container\">\r\n                    <div className=\"image-container\">\r\n                        <img src={backgroundImage} alt=\"background\" loading=\"lazy\" />\r\n                    </div>\r\n                    <form onSubmit={onForgotPassword}>\r\n                        <h1>Forgot Password</h1>\r\n                        <div className=\"input-container\">\r\n                            <label htmlFor=\"email\">Enter your e-mail</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                id=\"email\"\r\n                                placeholder=\"e.g. johndoe@gmail.com\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <button type=\"submit\" disabled={isLoading}>\r\n                            Send email\r\n                        </button>\r\n                    </form>\r\n                </main>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","const validateEmail = (email: string) => {\r\n    return email.match(\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n    );\r\n};\r\n\r\nexport default validateEmail;\r\n"],"names":["useState","email","setEmail","useForgotPasswordMutation","forgotPassword","isLoading","isError","error","onForgotPassword","e","preventDefault","toast","validateEmail","unwrap","result","success","message","data","useEffect","className","src","backgroundImage","alt","loading","onSubmit","htmlFor","type","name","id","placeholder","value","onChange","target","disabled","match"],"sourceRoot":""}