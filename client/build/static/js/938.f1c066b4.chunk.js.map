{"version":3,"file":"static/js/938.f1c066b4.chunk.js","mappings":"qIACA,OAAgB,iBAAmB,iCAAiC,OAAS,uBAAuB,OAAS,wB,2DCgC7G,EA1BoB,WAChB,IAAQA,GAAaC,EAAAA,EAAAA,MAAbD,SACFE,EAAqBF,EAASG,SAASC,EAAAA,EAAAA,cACvCC,EAAiBL,EAASG,SAASC,EAAAA,EAAAA,UACnCE,EAAgBN,EAASG,SAASC,EAAAA,EAAAA,SAExC,OACI,qBAASG,UAAWC,EAAAA,iBAAwB,WACxC,iBAAKD,UAAS,UAAKC,EAAAA,OAAa,YAAIH,EAAiBG,EAAAA,OAAgB,IAAK,WACtE,SAAC,MAAe,KAChB,uBAAG,yBAEP,SAAC,MAAY,CAACD,UAAWC,EAAAA,SACzB,iBAAKD,UAAS,UAAKC,EAAAA,OAAa,YAAIN,EAAqBM,EAAAA,OAAgB,IAAK,WAC1E,SAAC,MAAS,KACV,uBAAG,2BAEP,SAAC,MAAY,CAACD,UAAWC,EAAAA,SACzB,iBAAKD,UAAS,UAAKC,EAAAA,OAAa,YAAIF,EAAgBE,EAAAA,OAAgB,IAAK,WACrE,SAAC,MAA0B,KAC3B,uBAAG,iBAInB,C,sGC9BA,EAA2B,yBAA3B,EAAwE,kCAAxE,EAAoH,wBAApH,EAA8J,gCAA9J,EAAgN,gC,sHC0EhN,EA/DiB,WACb,IAyBO,EAzBDC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,MAApBC,EAAI,EAAJA,KAAMC,EAAS,EAATA,UACd,GAAwBC,EAAAA,EAAAA,MAAjBC,GAA2C,YAA9B,GACdC,GAAWC,EAAAA,EAAAA,MAOXC,EAAe,yCAAG,WAAOC,GAAU,qGAEVJ,EAAc,CAAEI,GAAAA,IAAMC,SAAS,KAAD,GAA/CC,EAAQ,QACDC,QACTC,EAAAA,GAAAA,QAAcF,EAASG,SAEvBD,EAAAA,GAAAA,MAAYF,EAASG,SACxB,gDAEDD,EAAAA,GAAAA,MAAY,KAAIX,KAAKY,SAAW,4BAA4B,yDAEnE,gBAXoB,sCAarB,OAAIX,GACO,SAAC,IAAW,KAGf,qBAASN,UAAWC,EAAgB,WAChC,SAAC,IAAW,KACZ,eAAID,UAAU,cAAa,SAAC,4BAC5B,gBAAKA,UAAWC,EAAyB,SAChC,OAAJI,QAAI,IAAJA,GAAe,QAAX,EAAJA,EAAMa,iBAAS,WAAX,EAAJ,EAAiBC,KAAI,SAACC,EAAKC,GAAG,OAC3B,qBAAmBrB,UAAWC,EAAe,WACzC,yBACKmB,EAAIE,SAAS,KAAGF,EAAIG,SAEzB,yBACKH,EAAII,MAAM,MAAIJ,EAAIK,YAEvB,uBAAIL,EAAIM,WACR,iBAAK1B,UAAWC,EAAuB,WACnC,SAAC,KAAI,CAAC0B,GAAE,mBAAcP,EAAIQ,IAAG,WAAW,UACpC,SAAC,MAAQ,CAACC,MAAM,oBAEpB,SAAC,MAAY,CAACA,MAAM,iBAAiBC,QAAS,kBAAMnB,EAAgBS,EAAIQ,IAAK,KAC7E,mBAAQG,KAAK,SAASF,MAAM,mBAAmBC,QAAS,kBAxC7DlB,EAwCiFQ,EAAIQ,IAvCxG1B,GAAS8B,EAAAA,EAAAA,IAAgB,CAAEC,aAAcrB,UACzCH,EAASZ,EAAAA,EAAAA,cAFS,IAACe,CAwC0F,EAAC,SAAC,0BAbjFS,EAiBJ,OAGlB,SAAC,KAAI,CAACM,GAAI9B,EAAAA,EAAAA,WAAkB,UACxB,mBAAQkC,KAAK,SAAS/B,UAAWC,EAAwB4B,MAAM,kBAAiB,SAAC,wBAOrG,C","sources":["webpack://client/./src/components/common/orderStatus/styles.module.scss?96e7","components/common/orderStatus/index.tsx","webpack://client/./src/components/features/order/shipping/styles.module.scss?735c","components/features/order/shipping/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"status_container\":\"styles_status_container__ISRYd\",\"status\":\"styles_status__TWH6x\",\"active\":\"styles_active__Ai8fo\"};","import styles from \"./styles.module.scss\";\r\nimport routes from \"components/app/routes\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { MdLocalShipping } from \"react-icons/md\";\r\nimport { BsArrowRight, BsFillCreditCard2FrontFill } from \"react-icons/bs\";\r\nimport { GoPackage } from \"react-icons/go\";\r\n\r\nconst OrderStatus = () => {\r\n    const { pathname } = useLocation();\r\n    const isConfirmationPage = pathname.includes(routes.confirmOrder);\r\n    const isShippingPage = pathname.includes(routes.shipping);\r\n    const isPaymentPage = pathname.includes(routes.payment);\r\n\r\n    return (\r\n        <section className={styles.status_container}>\r\n            <div className={`${styles.status} ${isShippingPage ? styles.active : \"\"}`}>\r\n                <MdLocalShipping />\r\n                <p>Shipping Details</p>\r\n            </div>\r\n            <BsArrowRight className={styles.arrow} />\r\n            <div className={`${styles.status} ${isConfirmationPage ? styles.active : \"\"}`}>\r\n                <GoPackage />\r\n                <p>Order Confirmation</p>\r\n            </div>\r\n            <BsArrowRight className={styles.arrow} />\r\n            <div className={`${styles.status} ${isPaymentPage ? styles.active : \"\"}`}>\r\n                <BsFillCreditCard2FrontFill />\r\n                <p>Payment</p>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default OrderStatus;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"shipping\":\"styles_shipping__iPcpw\",\"address_container\":\"styles_address_container__-2fqj\",\"address\":\"styles_address__Wu7wY\",\"address_actions\":\"styles_address_actions__GekOC\",\"add_new_address\":\"styles_add_new_address__kPxZg\"};","import styles from \"./styles.module.scss\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\nimport { BiPencil } from \"react-icons/bi\";\r\nimport OrderStatus from \"components/common/orderStatus\";\r\nimport routes from \"components/app/routes\";\r\nimport { useDeleteAddressMutation, useGetAllAddressesQuery } from \"store/queries\";\r\nimport LoadingPage from \"components/common/loading\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useAppDispatch } from \"store\";\r\nimport { setShippingInfo } from \"store/slices\";\r\n\r\nconst Shipping = () => {\r\n    const dispatch = useAppDispatch();\r\n    const { data, isLoading } = useGetAllAddressesQuery();\r\n    const [deleteAddress] = useDeleteAddressMutation();\r\n    const navigate = useNavigate();\r\n\r\n    const selectAddress = (id: string) => {\r\n        dispatch(setShippingInfo({ shippingInfo: id }));\r\n        navigate(routes.confirmOrder);\r\n    };\r\n\r\n    const onDeleteAddress = async (id: string) => {\r\n        try {\r\n            const response = await deleteAddress({ id }).unwrap();\r\n            if (response.success) {\r\n                toast.success(response.message);\r\n            } else {\r\n                toast.error(response.message);\r\n            }\r\n        } catch (err: any) {\r\n            toast.error(err.data.message || \"Unable to delete address\");\r\n        }\r\n    };\r\n\r\n    if (isLoading) {\r\n        return <LoadingPage />;\r\n    } else {\r\n        return (\r\n            <section className={styles.shipping}>\r\n                <OrderStatus />\r\n                <h2 className=\"text-center\">Enter Delivery Address</h2>\r\n                <div className={styles.address_container}>\r\n                    {data?.addresses?.map((add, idx) => (\r\n                        <article key={idx} className={styles.address}>\r\n                            <p>\r\n                                {add.location}, {add.city}\r\n                            </p>\r\n                            <p>\r\n                                {add.state} - {add.pincode}\r\n                            </p>\r\n                            <p>{add.country}</p>\r\n                            <div className={styles.address_actions}>\r\n                                <Link to={`/address/${add._id!}/update`}>\r\n                                    <BiPencil title=\"Edit Address\" />\r\n                                </Link>\r\n                                <AiFillDelete title=\"Delete Address\" onClick={() => onDeleteAddress(add._id!)} />\r\n                                <button type=\"button\" title=\"Use this address\" onClick={() => selectAddress(add._id!)}>\r\n                                    Use this address\r\n                                </button>\r\n                            </div>\r\n                        </article>\r\n                    ))}\r\n                </div>\r\n                <Link to={routes.addAddress}>\r\n                    <button type=\"button\" className={styles.add_new_address} title=\"Add New Address\">\r\n                        Add New Address\r\n                    </button>\r\n                </Link>\r\n            </section>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Shipping;\r\n"],"names":["pathname","useLocation","isConfirmationPage","includes","routes","isShippingPage","isPaymentPage","className","styles","dispatch","useAppDispatch","useGetAllAddressesQuery","data","isLoading","useDeleteAddressMutation","deleteAddress","navigate","useNavigate","onDeleteAddress","id","unwrap","response","success","toast","message","addresses","map","add","idx","location","city","state","pincode","country","to","_id","title","onClick","type","setShippingInfo","shippingInfo"],"sourceRoot":""}